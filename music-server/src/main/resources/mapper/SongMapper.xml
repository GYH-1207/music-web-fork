<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.music.dao.SongMapper">
    <resultMap id="BaseResultMap" type="com.javaclimb.music.domain.Song" >
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="singer_id" jdbcType="VARCHAR" property="singerId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="is_vip" jdbcType="INTEGER" property="isVip"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.javaclimb.music.domain.Song" extends="BaseResultMap">
        <result column="lyric" jdbcType="LONGVARCHAR" property="lyric"/>
    </resultMap>

<!--    <resultMap id="ResultMapWithSpecial" type="com.javaclimb.music.domain.Song" extends="ResultMapWithBLOBs">-->
<!--        <result column="user_id" javaType="INTEGER" property="userId"/>-->
<!--        <result column="song_id" javaType="INTEGER" property="songId"/>-->
<!--        <result column="song_play_count" javaType="INTEGER" property="songPlayCount"/>-->
<!--    </resultMap>-->

    <resultMap id="ResultMapWithSpecial" type="com.javaclimb.music.domain.Song" extends="BaseResultMap">
        <!-- 其他字段映射配置 -->
        <result column="user_id" javaType="Integer" property="userId"/>
        <result column="song_id" javaType="Integer" property="songId"/>
        <result column="song_play_count" javaType="Integer" property="songPlayCount"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,url,is_vip
    </sql>

    <sql id="Blob_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,lyric,url,is_vip
    </sql>

<!--    <sql id="Special_Column_List">-->
<!--        s.id,s.singer_id,s.name,s.introduction,s.create_time,s.update_time,s.pic,s.lyric,s.url,s.is_vip,-->
<!--            sps.user_id,sps.song_id,sps.song_play_count-->
<!--    </sql>-->

    <sql id="Special_Column_List">
        s.id, s.singer_id, s.name, s.introduction, s.create_time, s.update_time, s.pic, s.lyric, s.url, s.is_vip,
    sps.user_id AS user_id, sps.song_id AS song_id, sps.song_play_count AS song_play_count
    </sql>

    <insert id="insert" parameterType="com.javaclimb.music.domain.Song">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="singerId != null">
                singer_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            create_time,update_time,
            <if test="pic != null">
                pic,
            </if>
            <if test="lyric != null">
                lyric,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="isVip != null">
                is_vip,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="singerId != null">
                #{singerId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            now(),now(),
            <if test="pic != null">
                #{pic},
            </if>
            <if test="lyric != null">
                #{lyric},
            </if>
            <if test="url != null">
                #{url},
            </if>
            <if test="isVip != null">
                #{isVip},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.javaclimb.music.domain.Song">
        update song
        <set>
            <if test="singerId != null">
                singer_id = #{singerId},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            update_time = now(),
            <if test="pic != null">
                pic = #{pic},
            </if>
            <if test="lyric != null">
                lyric = #{lyric},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="isVip != null">
                is_vip = #{isVip},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from song
        where id=#{id};
--         SET @auto_id = 0;
--         UPDATE song SET id = (@auto_id := @auto_id + 1);
--         ALTER TABLE song AUTO_INCREMENT = 1;
    </delete>

<!--    <select id="selectByPrimaryKeyClient" resultMap="ResultMapWithSpecial" parameterType="java.lang.Integer">-->
<!--        select-->
<!--        <include refid="Special_Column_List"/>-->
<!--        FROM song s LEFT JOIN song_play_sum sps ON s.id = sps.song_id-->
<!--        where-->
<!--        (-->
<!--        sps.user_id = #{userId}-->
<!--            or-->
<!--        sps.user_id is null-->
<!--        )-->
<!--        and s.id = #{id}-->
<!--    </select>-->

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Blob_Column_List"/>
        FROM song s
        where id = #{id}
    </select>

    <select id="allSong" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List"/>
        from song
    </select>

    <select id="songOfName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Blob_Column_List"/>
        from song
        where name = #{name}
    </select>

    <select id="likeSongOfName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Blob_Column_List"/>
        from song
        where name like #{name}
    </select>

<!--    <select id="songOfSingerIdClient" resultMap="ResultMapWithSpecial" parameterType="java.lang.Integer">-->
<!--        select-->
<!--        <include refid="Special_Column_List"/>-->
<!--        FROM song s LEFT JOIN song_play_sum sps ON s.id = sps.song_id-->
<!--        where-->
<!--        (-->
<!--        sps.user_id = #{userId}-->
<!--            or-->
<!--        sps.user_id is null-->
<!--        )-->
<!--        and s.singer_id = #{singerId}-->
<!--    </select>-->

    <select id="songOfSingerId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Blob_Column_List"/>
        FROM song
        where singer_id = #{singerId}
    </select>

    <select id="test" resultMap="ResultMapWithSpecial">
        select
        <include refid="Special_Column_List"/>
        FROM song s LEFT JOIN song_play_sum sps ON s.id = sps.song_id
        LIMIT 10 OFFSET 0;
    </select>
</mapper>



